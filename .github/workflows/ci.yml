name: CI (build + smoke + a11y)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then echo "manager=yarn" >> $GITHUB_OUTPUT
          else echo "manager=npm" >> $GITHUB_OUTPUT; fi

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.pm.outputs.manager }}

      - name: Setup pnpm (if needed)
        if: steps.pm.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install deps
        run: |
          PM=${{ steps.pm.outputs.manager }}
          if [ "$PM" = "pnpm" ]; then pnpm install
          elif [ "$PM" = "yarn" ]; then yarn install
          else npm ci || npm install; fi
          cd apps/web
          if [ "$PM" = "pnpm" ]; then pnpm install || true
          elif [ "$PM" = "yarn" ]; then yarn install || true
          else npm install || true; fi

      - name: Build site (detect out dir)
        working-directory: apps/web
        run: |
          OUT_DIR="dist"
          if [ -f next.config.js ] || [ -f next.config.mjs ]; then
            if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm run build
            elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then yarn build
            else npm run build; fi
            OUT_DIR="out"
          else
            if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm run build || true
            elif [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then yarn build || true
            else npm run build || true; fi
            [ -d dist ] || mkdir -p dist && cp -r ./* dist/
          fi
          echo "OUT_DIR=$OUT_DIR" >> $GITHUB_ENV
          test -f "$OUT_DIR/index.html" || (echo "index.html manquant" && exit 1)

      - name: Smoke: "MathQuest 6e"
        working-directory: apps/web
        run: |
          grep -Riq "MathQuest 6e" "${{ env.OUT_DIR }}/index.html" || (echo "Texte 'MathQuest 6e' non trouv√©" && exit 1)

      - name: Install Lighthouse CI & Pa11y
        run: |
          npm i -g @lhci/cli pa11y-ci

      - name: Lighthouse (static dir)
        working-directory: apps/web
        run: |
          npx @lhci/cli autorun \
            --collect.staticDistDir="${{ env.OUT_DIR }}" \
            --assert.assertions.accessibility=minor \
            --assert.assertions.seo=minor

      - name: Pa11y (against local server)
        working-directory: apps/web
        run: |
          npx @lhci/cli server --staticDistDir "${{ env.OUT_DIR }}" --port 8080 &
          SERVER_PID=$!
          npx pa11y-ci http://localhost:8080/
          kill $SERVER_PID
